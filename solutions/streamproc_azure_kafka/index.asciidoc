//Category=Communication
//Product=Kafka
//Platform=Azure
//Maturity level=Initial

:toc: macro
toc::[]
:idprefix:
:idseparator: -

== Apache Kafka on Microsoft Azure

=== Options for running Apache Kafka on Microsoft Azure
image::options.png[Kafka options]

[#EventHub]
==== Event Hub
Azure Event Hubfootnote:[https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-for-kafka-ecosystem-overview] supports Apache Kafka producer and consumer APIs

[green]#+ Simplest option# +
[red]#- No compression# +
[red]#- No Kafka streams#

[#AKS]
==== AKS
Kafka on Kubernetes (AKS) using Operatorsfootnote:[e.g. https://strimzi.io/ or Confluent Operator]

* rack awareness to spread brokers across availability zones
* Kubernetes taints and tolerations to run Kafka on dedicated nodes
* expose Kafka outside Kubernetes using NodePort
* Load balancer and Ingress, depending on your needs
* easily secured using TLS


[green]#+ Full control# +
[green]#+ dedicated cluster# +
[red]#- Most complex option# +
[red]#- potentially higher compute and storage cost#


[#ConfluentCloud]
==== Confluent Cloud
Confluent Cloudfootnote:[https://docs.microsoft.com/en-us/azure/partner-solutions/apache-kafka-confluent-cloud/overview] is now integrated in Azure Marketplace

image::confluent-resource.png["Confluent Resource", width=400, link=images/confluent-resource.png]

* https://docs.confluent.io/cloud/current/get-started/index.html[QuickStart]
* You need to sign up for an account with Confluent in addition to the Azure account
* Observability via 
** Confluent Control Centerfootnote:[https://docs.confluent.io/platform/current/control-center/index.html#control-center]
*** monitor system health in predefined dashboards and to alert on triggers
*** reports end-to-end stream monitoring
*** measures how long messages take
*** determines the source of any issues in your cluster
** Confluent Metric API, and e.g. Prometheus and Grafana
+
image:confluent-cluster-overview.png["Confluent Cluster Overview", width=300, link=images/confluent-cluster-overview.png]
image:confluent-data-flow.png["Confluent Data Flow", width=300, link=images/confluent-data-flow.png]
+


[green]#+ Reliable managed service# +
[green]#+ Confluent ecosystem: Kafka Connect, KSQL, Connectors (source & sink both), Confluent Schema Registry, Replicator# +
[red]#- No dedicated cluster (just multi-tenant cluster)# +
[red]#- No BYOK for data encryption#

[#HDInsight]
==== HDInsight
Azure HDInsightfootnote:[https://docs.microsoft.com/en-us/azure/hdinsight/kafka/apache-kafka-introduction] is a fully-managed cloud distribution of Hadoop Components. It supports many open-source frameworks like Apache Spark, Hive, Apache Storm, R Server, Apache HBase and of course Apache Kafka. It provides 99.99% SLA on Kafka uptime & uses Azure Managed Disks as the backing store for Kafka brokers (providing up to 16TB of storage per broker).

* Security:
** VNet Integration (cluster can be totally isolated)
** Integration with Azure AD, no Kafka ACLs, though
** Domain Joined VMs (services on VMs run seamlessly for authenticated users)
** BYOK & Managed Identity
* Monitoring:
** Integration with Azure Monitoring


[green]#+ Fully managed# +
[green]#+ Dedicated cluster# +
[red]#- No autoscale# +
[red]#- Dedicated cluster also means higher cost for compute and storage#


image::hdinsight-kafka.png["Kafka on HDInsight", width=300, link=images/hdinsight-kafka.png]

=== Comparison
There is no “one size fits all” solution, of course. +
Agraj Mangal from Microsoft provides a nice comparison (see table below).

If you need a *dedicated cluster*, you should go with [green]#*AKS*# or [green]#*HDInsight*#.

For *BYOK*-requirements, go with anything but [red]#*Confluent Cloud*#.

But, if you want the most *Kafka features* with the least amount of customer-management necessity, go with [green]#*Confluent Cloud*#.

For *simple Kafka-API-Integration* without any management necessity, go with [green]#*Event Hub*#.

Kafka on [red]#*VM*# is only recommended as a first step, to try out Kafka.

.Comparison
[options="header,footer",cols="<h,5*<",stripes=hover]
|=======================
|Criteria\Service
|Kafka on VM
|Event Hub
|Kafka on AKS
|Confluent Cloud
|HDInsight

|*High Availability*
|Managed by Customer
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]

|*Ease of Setup*
|Simple for Single broker, gets unmanageeable for bigger clusters
^.^|image:check-yes.png[width=20]
|Operators make it relatively easy. K8s knowledge required
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]

|*Cost*
|Dependent on the VM type you choose
|Standard Tier costs about $20/month/Throughput Unit
|Cost of Operator + Infra Used for Broker & Storage
|Consumption based pricing model - PAYG
|Cost for 1 Cluster approx. $2.90/hour

|*Apache Kafka Compatability*
^.^|image:check-yes.png[width=20]
|Most features work OOTB, some does not work
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]
|Up to Kafka 2.1.0 supported

|*Scalability*
|Managed by Customer
^.^|image:check-yes.png[width=20]
|Operators help with scaling
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]

|*Managed Service*
^.^|image:check-no.png[width=20]
^.^|image:check-yes.png[width=20]
|Managed by Customer
^.^|image:check-yes.png[width=20]
^.^|image:check-yes.png[width=20]

|*Primary Use Case*
|Easy first step in Cloud
|Easy One Click Replacement for Kafka
|Preferred if already invested in K8s
|Completely Managed 3rd Party; PAYG model
|Enterprise-grade security, BYOK, Azure-native
|=======================

== Credits

* *Main Source:* __Agraj Mangal__, https://itnext.io/apache-kafka-in-azure-6985ccdce89f

image::ms_guild_logo.png[MS Guild Logo, width=160, height=75, align=right, link="https://forms.office.com/Pages/ResponsePage.aspx?id=Wq6idgCfa0-V7V0z13xNYal7m2EdcFdNsyBBMUiro4NUNllHQTlPNU9QV1JRRjk3TTAwVUJCNThTRSQlQCN0PWcu"]
